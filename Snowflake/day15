/*     🎯 Learn Core Snowflake Built-in Functions       */

CREATE OR REPLACE TABLE employees (
  emp_id INT,
  emp_name STRING,
  dept STRING,
  salary NUMBER,
  hire_date DATE,
  bonus NUMBER
);

INSERT INTO employees VALUES
(101, 'John', 'HR', 60000, '2019-01-10', NULL),
(102, 'Raj', 'HR', 70000, '2020-03-12', 5000),
(103, 'Alice', 'IT', 90000, '2018-11-05', 7000),
(104, 'Eva', 'IT', 85000, '2021-02-20', NULL),
(105, 'Bob', 'Finance', 75000, '2022-04-10', 3000),
(106, 'Zara', NULL, 65000, '2023-01-01', 2000);

-- 🗓️ 1️⃣ Date Functions

-- Get the Current Date
select current_date(); 

-- Extract Year, Month, or Day
SELECT 
  emp_name,hire_date,
  YEAR(hire_date) AS hire_year,
  MONTH(hire_date) AS hire_month,
  DAY(hire_date) AS hire_day
FROM employees;

-- Add / Subtract Days or Months
SELECT 
  emp_name,
  hire_date,
  DATEADD('month', 6, hire_date) AS six_months_later,
  dateadd('month',-3, hire_date) as three_months_earlier
FROM employees;

-- Calculate Date Difference
SELECT 
  emp_name,hire_date,current_date(),
  DATEDIFF('year', hire_date, CURRENT_DATE()) AS years_of_service
FROM employees;

-- 🧵 2️⃣ String Functions

-- Change Case
SELECT 
  emp_name,
  UPPER(emp_name) AS upper_name,
  LOWER(emp_name) AS lower_name
FROM employees;

-- Substring & Length
SELECT 
  emp_name,
  SUBSTR(emp_name, 1, 3) AS first_three_chars,
  LENGTH(emp_name) AS name_length
FROM employees;

-- Concatenate Strings
SELECT 
  emp_name,
  dept,
  CONCAT(emp_name, ' works in ', dept, ' department') AS emp_info
FROM employees;

-- Replace / Trim
SELECT 
  REPLACE('emp_name', 'a', '@') AS replaced_name,
  LTRIM('   Snowflake') AS left_trimmed,
  RTRIM('Snowflake   ') AS right_trimmed,
  TRIM('   Snowflake   ') AS fully_trimmed;

-- ⚙️ 3️⃣ Conditional Functions
SELECT 
  emp_name,
  dept, salary,
  CASE 
    WHEN salary >= 85000 THEN 'High Earner'
    WHEN salary BETWEEN 70000 AND 84999 THEN 'Medium Earner'
    ELSE 'Low Earner'
  END AS salary_category
FROM employees;

-- IFF (Inline If)
SELECT 
  emp_name, salary, bonus,
  IFF(bonus IS NULL, 'No Bonus', 'Has Bonus') AS bonus_status
FROM employees;

-- DECODE (Simpler Multi-Condition)
SELECT 
  emp_name, dept,
  DECODE(dept, 
          'IT', 'Technology',
          'HR', 'Human Resources',
          'Finance', 'Accounts',
          'Other') AS dept_full_name
FROM employees;

-- 🚫 4️⃣ NULL Handling Functions

--  COALESCE — Replace NULLs with Default Value
SELECT 
  emp_name, bonus,
  COALESCE(bonus, 0) AS bonus_amount
FROM employees;

-- NVL (Similar to COALESCE)
SELECT 
  emp_name, dept, 
  NVL(dept, 'Unassigned') AS department
FROM employees;


-- NULLIF — Return NULL if Two Values Match
SELECT 
  emp_name, dept,
  NULLIF(dept, 'HR') AS null_if_hr
FROM employees;

-- IS NULL / IS NOT NULL Filters
SELECT emp_name, dept, bonus,
FROM employees
WHERE bonus IS NULL;


--💡 Mini Project
/*
Show employees with:
    - Years of service,
    - Salary category,
    - Bonus adjusted to 0 if NULL,
    - Department labeled properly.
*/

select 
    emp_id,
    TRIM(emp_name) emp_name,
    nvl(dept,'Unassigned') dept,
    salary,
    iff(salary >70000, 'High', 'Regular') salary,
    hire_date,
    datediff(year,hire_date,current_date()) service_histroy,
    nvl(bonus,0) bonus,
    concat(emp_name,' (', dept,')') dept_label
from employees;

/* 🧠  Concept Summary
| Category    | Function                        | Description            | Example                              |
| ----------- | ------------------------------- | ---------------------- | ------------------------------------ |
| Date        | `DATEADD`, `DATEDIFF`, `YEAR()` | Add or compare dates   | `DATEADD('day', 10, hire_date)`      |
| String      | `CONCAT`, `SUBSTR`, `LENGTH`    | Text operations        | `CONCAT(first_name, ' ', last_name)` |
| Conditional | `CASE`, `IFF`, `DECODE`         | Apply logic in queries | `IFF(salary>80000, 'High', 'Low')`   |
| NULL        | `COALESCE`, `NVL`, `NULLIF`     | Handle missing values  | `nvl(bonus,0)`                       |

*/

-- 💪 Practice Tasks

-- Show employees hired before 2020 and calculate how many years they’ve worked.
select
    emp_name,
    hire_date,
    datediff(year, hire_date,current_date())
from employees
where year(hire_date) < 2020;

-- Replace all NULL department names with 'Not Assigned'.

select 
    emp_name, dept,
    nvl(dept,'Not Assigned') dept,
    iff(dept is null,'Not Assigned', dept) dept1,
    NVL2(dept, dept, 'Not Assigned') dept2
from employees;

-- Create a label: 'EmployeeName (Department) - Hired in YEAR'.
select
    concat(emp_name,' (', nvl(dept,'N/A'),')',' - Hired in ', year(hire_date)) label
from employees;

-- Show only “High Earners” with salary > 85000 and a non-NULL bonus.
select 
    emp_name,
    salary,
    bonus,
    'High Earner' as label
from employees
where salary > 85000 and bonus is not null;

-- Calculate each employee’s next appraisal date = hire_date + 1 year
select
    emp_name,
    hire_date,
    dateadd(year,1,hire_date) apprisal_date
from employees;








